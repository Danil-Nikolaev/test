variable:
    profile: dev
    binding-name: producer-out-0
    retry:
        delay: 800
        max-attempts: 3
    mock:
        base-url: http://localhost:8084
        post-endpoint: ${variable.mock.base-url}/test
    keycloak:
        base-url: http://localhost:8080
        realm-name: test-realm
        client-id: mock-client
        client-secret: kjFCjCCJzARVJQjbYT6vfMupisVwiFRK
        username: consumer-service
        password: password
        access-url: ${variable.keycloak.base-url}/realms/${variable.keycloak.realm-name}/protocol/openid-connect/token
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/consumerDB
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer 
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
  cloud:
    function:
      definition: consumer
    stream:
      bindings:
        consumer-in-0:
          destination: test
          consumer:
            use-native-decoding: true
        producer-out-0:
          destination: test-user
          producer:
            use-native-encoding: true

   